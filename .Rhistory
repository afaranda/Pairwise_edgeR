c("GO:0008284","positive regulation of cell proliferation",0.151,0.594,0.699,"mesenchymal cell proliferation"),
c("GO:2000345","regulation of hepatocyte proliferation",0.002,0.601,0.548,"mesenchymal cell proliferation"),
c("GO:0016554","cytidine to uridine editing",0.003,0.943,0.068,"cytidine to uridine editing"),
c("GO:0019542","propionate biosynthetic process",0.000,0.878,0.072,"propionate biosynthesis"),
c("GO:0008203","cholesterol metabolic process",0.028,0.869,0.646,"propionate biosynthesis"),
c("GO:0042573","retinoic acid metabolic process",0.005,0.759,0.411,"propionate biosynthesis"),
c("GO:0006083","acetate metabolic process",0.052,0.849,0.328,"propionate biosynthesis"),
c("GO:0006069","ethanol oxidation",0.017,0.876,0.139,"propionate biosynthesis"),
c("GO:0070092","regulation of glucagon secretion",0.001,0.691,0.592,"propionate biosynthesis"));
stuff <- data.frame(revigo.data);
names(stuff) <- revigo.names;
stuff$abslog10pvalue <- as.numeric( as.character(stuff$abslog10pvalue) );
stuff$freqInDbPercent <- as.numeric( as.character(stuff$freqInDbPercent) );
stuff$uniqueness <- as.numeric( as.character(stuff$uniqueness) );
stuff$dispensability <- as.numeric( as.character(stuff$dispensability) );
# by default, outputs to a PDF file
pdf( file="revigo_treemap.pdf", width=16, height=9 ) # width and height are in inches
# check the tmPlot command documentation for all possible parameters - there are a lot more
tmPlot(
stuff,
index = c("representative","description"),
vSize = "abslog10pvalue",
type = "categorical",
vColor = "representative",
title = "REVIGO Gene Ontology treemap",
inflate.labels = FALSE,      # set this to TRUE for space-filling group labels - good for posters
lowerbound.cex.labels = 0,   # try to draw as many labels as possible (still, some small squares may not get a label)
bg.labels = "#CCCCCCAA",     # define background color of group labels
# "#CCCCCC00" is fully transparent, "#CCCCCCAA" is semi-transparent grey, NA is opaque
position.legend = "none"
)
dev.off()
# -----------------------------------------------------------------------------
# If you don't have the treemap package installed, uncomment the following line:
# install.packages( "treemap" );
library(treemap) 								# treemap package by Martijn Tennekes
revigo.names <- c("term_ID","description","freqInDbPercent","uniqueness","dispensability","representative");
revigo.data <- rbind(c("GO:0009253","peptidoglycan catabolic process",0.145,0.953,0.000,"peptidoglycan catabolism"),
c("GO:0006527","arginine catabolic process",0.051,0.842,0.620,"peptidoglycan catabolism"),
c("GO:0019886","antigen processing and presentation of exogenous peptide antigen via MHC class II",0.002,0.714,0.000,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0072676","lymphocyte migration",0.013,0.587,0.599,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002431","Fc receptor mediated stimulatory signaling pathway",0.003,0.462,0.642,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002274","myeloid leukocyte activation",0.033,0.599,0.576,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0042088","T-helper 1 type immune response",0.006,0.616,0.502,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002830","positive regulation of type 2 immune response",0.003,0.480,0.561,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0031589","cell-substrate adhesion",0.078,0.851,0.000,"cell-substrate adhesion"),
c("GO:0060710","chorio-allantoic fusion",0.001,0.647,0.591,"cell-substrate adhesion"),
c("GO:0033631","cell-cell adhesion mediated by integrin",0.003,0.804,0.588,"cell-substrate adhesion"),
c("GO:0034113","heterotypic cell-cell adhesion",0.009,0.794,0.656,"cell-substrate adhesion"),
c("GO:0035456","response to interferon-beta",0.004,0.849,0.000,"response to interferon-beta"),
c("GO:0001562","response to protozoan",0.004,0.823,0.182,"response to interferon-beta"),
c("GO:0045880","positive regulation of smoothened signaling pathway",0.007,0.586,0.520,"response to interferon-beta"),
c("GO:0032102","negative regulation of response to external stimulus",0.058,0.589,0.483,"response to interferon-beta"),
c("GO:2000659","regulation of interleukin-1-mediated signaling pathway",0.001,0.678,0.608,"response to interferon-beta"),
c("GO:0002884","negative regulation of hypersensitivity",0.000,0.506,0.648,"response to interferon-beta"),
c("GO:0009617","response to bacterium",0.145,0.791,0.697,"response to interferon-beta"),
c("GO:0006954","inflammatory response",0.110,0.806,0.219,"response to interferon-beta"),
c("GO:0007166","cell surface receptor signaling pathway",0.920,0.658,0.321,"response to interferon-beta"),
c("GO:0051262","protein tetramerization",0.044,0.925,0.000,"protein tetramerization"),
c("GO:0030198","extracellular matrix organization",0.060,0.849,0.321,"protein tetramerization"),
c("GO:0061448","connective tissue development",0.053,0.841,0.000,"connective tissue development"),
c("GO:0035239","tube morphogenesis",0.112,0.693,0.689,"connective tissue development"),
c("GO:0021960","anterior commissure morphogenesis",0.001,0.697,0.487,"connective tissue development"),
c("GO:0048541","Peyer's patch development",0.002,0.540,0.569,"connective tissue development"),
c("GO:0003418","growth plate cartilage chondrocyte differentiation",0.001,0.708,0.565,"connective tissue development"),
c("GO:0072236","metanephric loop of Henle development",0.001,0.729,0.554,"connective tissue development"),
c("GO:0071679","commissural neuron axon guidance",0.002,0.567,0.609,"connective tissue development"),
c("GO:0061213","positive regulation of mesonephros development",0.004,0.547,0.688,"connective tissue development"),
c("GO:0099054","presynapse assembly",0.002,0.696,0.495,"connective tissue development"),
c("GO:0060384","innervation",0.005,0.726,0.412,"connective tissue development"),
c("GO:0070269","pyroptosis",0.001,0.884,0.017,"pyroptosis"),
c("GO:1901215","negative regulation of neuron death",0.032,0.715,0.548,"pyroptosis"),
c("GO:0045071","negative regulation of viral genome replication",0.008,0.775,0.019,"negative regulation of viral genome replication"),
c("GO:0052548","regulation of endopeptidase activity",0.188,0.762,0.168,"negative regulation of viral genome replication"),
c("GO:0051091","positive regulation of sequence-specific DNA binding transcription factor activity",0.050,0.658,0.575,"negative regulation of viral genome replication"),
c("GO:0050731","positive regulation of peptidyl-tyrosine phosphorylation",0.032,0.664,0.573,"negative regulation of viral genome replication"),
c("GO:0032329","serine transport",0.011,0.865,0.040,"serine transport"),
c("GO:0072348","sulfur compound transport",0.249,0.858,0.357,"serine transport"),
c("GO:2000310","regulation of N-methyl-D-aspartate selective glutamate receptor activity",0.002,0.617,0.492,"serine transport"),
c("GO:0050766","positive regulation of phagocytosis",0.009,0.616,0.526,"serine transport"),
c("GO:0043315","positive regulation of neutrophil degranulation",0.000,0.488,0.548,"serine transport"),
c("GO:0051953","negative regulation of amine transport",0.003,0.721,0.404,"serine transport"),
c("GO:0044241","lipid digestion",0.004,0.752,0.042,"lipid digestion"),
c("GO:0010714","positive regulation of collagen metabolic process",0.003,0.565,0.508,"lipid digestion"),
c("GO:0045778","positive regulation of ossification",0.017,0.542,0.606,"lipid digestion"),
c("GO:1904018","positive regulation of vasculature development",0.025,0.519,0.681,"lipid digestion"),
c("GO:0010574","regulation of vascular endothelial growth factor production",0.006,0.633,0.524,"lipid digestion"),
c("GO:0032703","negative regulation of interleukin-2 production",0.003,0.597,0.680,"lipid digestion"),
c("GO:0050705","regulation of interleukin-1 alpha secretion",0.001,0.586,0.633,"lipid digestion"),
c("GO:0008355","olfactory learning",0.005,0.656,0.390,"lipid digestion"),
c("GO:0046850","regulation of bone remodeling",0.008,0.643,0.404,"lipid digestion"),
c("GO:0010463","mesenchymal cell proliferation",0.009,0.865,0.044,"mesenchymal cell proliferation"),
c("GO:0008284","positive regulation of cell proliferation",0.151,0.594,0.699,"mesenchymal cell proliferation"),
c("GO:2000345","regulation of hepatocyte proliferation",0.002,0.601,0.548,"mesenchymal cell proliferation"),
c("GO:0016554","cytidine to uridine editing",0.003,0.943,0.068,"cytidine to uridine editing"),
c("GO:0019542","propionate biosynthetic process",0.000,0.878,0.072,"propionate biosynthesis"),
c("GO:0008203","cholesterol metabolic process",0.028,0.869,0.646,"propionate biosynthesis"),
c("GO:0042573","retinoic acid metabolic process",0.005,0.759,0.411,"propionate biosynthesis"),
c("GO:0006083","acetate metabolic process",0.052,0.849,0.328,"propionate biosynthesis"),
c("GO:0006069","ethanol oxidation",0.017,0.876,0.139,"propionate biosynthesis"),
c("GO:0070092","regulation of glucagon secretion",0.001,0.691,0.592,"propionate biosynthesis"));
stuff <- data.frame(revigo.data);
names(stuff) <- revigo.names;
stuff$abslog10pvalue <- as.numeric( as.character(stuff$abslog10pvalue) );
revigo.data <- rbind(c("GO:0009253","peptidoglycan catabolic process",0.145,0.953,0.000,"peptidoglycan catabolism"),
c("GO:0006527","arginine catabolic process",0.051,0.842,0.620,"peptidoglycan catabolism"),
c("GO:0019886","antigen processing and presentation of exogenous peptide antigen via MHC class II",0.002,0.714,0.000,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0072676","lymphocyte migration",0.013,0.587,0.599,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002431","Fc receptor mediated stimulatory signaling pathway",0.003,0.462,0.642,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002274","myeloid leukocyte activation",0.033,0.599,0.576,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0042088","T-helper 1 type immune response",0.006,0.616,0.502,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0002830","positive regulation of type 2 immune response",0.003,0.480,0.561,"antigen processing and presentation of exogenous peptide antigen via MHC class II"),
c("GO:0031589","cell-substrate adhesion",0.078,0.851,0.000,"cell-substrate adhesion"),
c("GO:0060710","chorio-allantoic fusion",0.001,0.647,0.591,"cell-substrate adhesion"),
c("GO:0033631","cell-cell adhesion mediated by integrin",0.003,0.804,0.588,"cell-substrate adhesion"),
c("GO:0034113","heterotypic cell-cell adhesion",0.009,0.794,0.656,"cell-substrate adhesion"),
c("GO:0035456","response to interferon-beta",0.004,0.849,0.000,"response to interferon-beta"),
c("GO:0001562","response to protozoan",0.004,0.823,0.182,"response to interferon-beta"),
c("GO:0045880","positive regulation of smoothened signaling pathway",0.007,0.586,0.520,"response to interferon-beta"),
c("GO:0032102","negative regulation of response to external stimulus",0.058,0.589,0.483,"response to interferon-beta"),
c("GO:2000659","regulation of interleukin-1-mediated signaling pathway",0.001,0.678,0.608,"response to interferon-beta"),
c("GO:0002884","negative regulation of hypersensitivity",0.000,0.506,0.648,"response to interferon-beta"),
c("GO:0009617","response to bacterium",0.145,0.791,0.697,"response to interferon-beta"),
c("GO:0006954","inflammatory response",0.110,0.806,0.219,"response to interferon-beta"),
c("GO:0007166","cell surface receptor signaling pathway",0.920,0.658,0.321,"response to interferon-beta"),
c("GO:0051262","protein tetramerization",0.044,0.925,0.000,"protein tetramerization"),
c("GO:0030198","extracellular matrix organization",0.060,0.849,0.321,"protein tetramerization"),
c("GO:0061448","connective tissue development",0.053,0.841,0.000,"connective tissue development"),
c("GO:0035239","tube morphogenesis",0.112,0.693,0.689,"connective tissue development"),
c("GO:0021960","anterior commissure morphogenesis",0.001,0.697,0.487,"connective tissue development"),
c("GO:0048541","Peyer's patch development",0.002,0.540,0.569,"connective tissue development"),
c("GO:0003418","growth plate cartilage chondrocyte differentiation",0.001,0.708,0.565,"connective tissue development"),
c("GO:0072236","metanephric loop of Henle development",0.001,0.729,0.554,"connective tissue development"),
c("GO:0071679","commissural neuron axon guidance",0.002,0.567,0.609,"connective tissue development"),
c("GO:0061213","positive regulation of mesonephros development",0.004,0.547,0.688,"connective tissue development"),
c("GO:0099054","presynapse assembly",0.002,0.696,0.495,"connective tissue development"),
c("GO:0060384","innervation",0.005,0.726,0.412,"connective tissue development"),
c("GO:0070269","pyroptosis",0.001,0.884,0.017,"pyroptosis"),
c("GO:1901215","negative regulation of neuron death",0.032,0.715,0.548,"pyroptosis"),
c("GO:0045071","negative regulation of viral genome replication",0.008,0.775,0.019,"negative regulation of viral genome replication"),
c("GO:0052548","regulation of endopeptidase activity",0.188,0.762,0.168,"negative regulation of viral genome replication"),
c("GO:0051091","positive regulation of sequence-specific DNA binding transcription factor activity",0.050,0.658,0.575,"negative regulation of viral genome replication"),
c("GO:0050731","positive regulation of peptidyl-tyrosine phosphorylation",0.032,0.664,0.573,"negative regulation of viral genome replication"),
c("GO:0032329","serine transport",0.011,0.865,0.040,"serine transport"),
c("GO:0072348","sulfur compound transport",0.249,0.858,0.357,"serine transport"),
c("GO:2000310","regulation of N-methyl-D-aspartate selective glutamate receptor activity",0.002,0.617,0.492,"serine transport"),
c("GO:0050766","positive regulation of phagocytosis",0.009,0.616,0.526,"serine transport"),
c("GO:0043315","positive regulation of neutrophil degranulation",0.000,0.488,0.548,"serine transport"),
c("GO:0051953","negative regulation of amine transport",0.003,0.721,0.404,"serine transport"),
c("GO:0044241","lipid digestion",0.004,0.752,0.042,"lipid digestion"),
c("GO:0010714","positive regulation of collagen metabolic process",0.003,0.565,0.508,"lipid digestion"),
c("GO:0045778","positive regulation of ossification",0.017,0.542,0.606,"lipid digestion"),
c("GO:1904018","positive regulation of vasculature development",0.025,0.519,0.681,"lipid digestion"),
c("GO:0010574","regulation of vascular endothelial growth factor production",0.006,0.633,0.524,"lipid digestion"),
c("GO:0032703","negative regulation of interleukin-2 production",0.003,0.597,0.680,"lipid digestion"),
c("GO:0050705","regulation of interleukin-1 alpha secretion",0.001,0.586,0.633,"lipid digestion"),
c("GO:0008355","olfactory learning",0.005,0.656,0.390,"lipid digestion"),
c("GO:0046850","regulation of bone remodeling",0.008,0.643,0.404,"lipid digestion"),
c("GO:0010463","mesenchymal cell proliferation",0.009,0.865,0.044,"mesenchymal cell proliferation"),
c("GO:0008284","positive regulation of cell proliferation",0.151,0.594,0.699,"mesenchymal cell proliferation"),
c("GO:2000345","regulation of hepatocyte proliferation",0.002,0.601,0.548,"mesenchymal cell proliferation"),
c("GO:0016554","cytidine to uridine editing",0.003,0.943,0.068,"cytidine to uridine editing"),
c("GO:0019542","propionate biosynthetic process",0.000,0.878,0.072,"propionate biosynthesis"),
c("GO:0008203","cholesterol metabolic process",0.028,0.869,0.646,"propionate biosynthesis"),
c("GO:0042573","retinoic acid metabolic process",0.005,0.759,0.411,"propionate biosynthesis"),
c("GO:0006083","acetate metabolic process",0.052,0.849,0.328,"propionate biosynthesis"),
c("GO:0006069","ethanol oxidation",0.017,0.876,0.139,"propionate biosynthesis"),
c("GO:0070092","regulation of glucagon secretion",0.001,0.691,0.592,"propionate biosynthesis"));
stuff <- data.frame(revigo.data);
names(stuff) <- revigo.names;
stuff$abslog10pvalue <- as.numeric( as.character(stuff$abslog10pvalue) );
stuff
head(stuff)
stuff$freqInDbPercent <- as.numeric( as.character(stuff$freqInDbPercent) );
stuff$uniqueness <- as.numeric( as.character(stuff$uniqueness) );
stuff$dispensability <- as.numeric( as.character(stuff$dispensability) );
# by default, outputs to a PDF file
pdf( file="revigo_treemap.pdf", width=16, height=9 ) # width and height are in inches
# check the tmPlot command documentation for all possible parameters - there are a lot more
tmPlot(
stuff,
index = c("representative","description"),
vSize = "abslog10pvalue",
type = "categorical",
vColor = "representative",
title = "REVIGO Gene Ontology treemap",
inflate.labels = FALSE,      # set this to TRUE for space-filling group labels - good for posters
lowerbound.cex.labels = 0,   # try to draw as many labels as possible (still, some small squares may not get a label)
bg.labels = "#CCCCCCAA",     # define background color of group labels
# "#CCCCCC00" is fully transparent, "#CCCCCCAA" is semi-transparent grey, NA is opaque
position.legend = "none"
)
# check the tmPlot command documentation for all possible parameters - there are a lot more
tmPlot(
stuff,
index = c("representative","description"),
#vSize = "abslog10pvalue",
type = "categorical",
vColor = "representative",
title = "REVIGO Gene Ontology treemap",
inflate.labels = FALSE,      # set this to TRUE for space-filling group labels - good for posters
lowerbound.cex.labels = 0,   # try to draw as many labels as possible (still, some small squares may not get a label)
bg.labels = "#CCCCCCAA",     # define background color of group labels
# "#CCCCCC00" is fully transparent, "#CCCCCCAA" is semi-transparent grey, NA is opaque
position.legend = "none"
)
stuff
write.csv(allRes, "GOTERMS.csv")
getwd()
source('~/Downloads/REVIGO_treemap-2.r')
fn<-"~/Desktop/Pax6_Study_DE/results/Cor_DEG_Table.tsv"
idc='gene_id'
fdr='FDR'
lfc='logFC'
# Import data #################################################################
deg<-read.table(fn, sep='\t', quote="", header=T, stringsAsFactors = F)
# Run Gene Ontology Enrichments ###############################################
gl<-deg[abs(deg[,lfc]) > 1 & deg[,fdr]< 0.05, idc ]
gobp<-enrichGO(
gene = gl,
OrgDb = org.Mm.eg.db,
keyType = 'ENSEMBL',
ont = 'BP'
)
##############################################################################
library(clusterProfiler)
library(GOSemSim)
library(edgeR)
library(org.Mm.eg.db)
# Run Gene Ontology Enrichments ###############################################
gl<-deg[abs(deg[,lfc]) > 1 & deg[,fdr]< 0.05, idc ]
gobp<-enrichGO(
gene = gl,
OrgDb = org.Mm.eg.db,
keyType = 'ENSEMBL',
ont = 'BP'
)
allRes<-GenTable(
GOdata, classFisher=res.F.C,
elimFisher=res.F.E, weightFisher=res.F.W,
orderBy="classFisher", ranksOf="classFisher",
topNodes=100, numChar=100
)
gobp
gobp@result
dropGO(gobp, term=c('GO:0030099', 'GO:0071900'))
gobp
allRes<-GenTable(
GOdata, classFisher=res.F.C,
elimFisher=res.F.E, weightFisher=res.F.W,
orderBy="elimFisher", ranksOf="classFisher",
topNodes=100, numChar=100
)
row.names(gobp)
gobp@geneSets
gobp.elim<-dropGO(
gobp,
term = setdiff(
row.names(gobp@result),
allRes$GO.ID[1:20]
)
)
emapplot(gobp)
dev.off()
dev.off()
emapplot(gobp)
emapplot(gobp.elim)
gobp.elim<-dropGO(
gobp,
term = setdiff(
row.names(gobp@result),
allRes$GO.ID[1:100]
)
)
emapplot(gobp.elim)
barplot(gobp.elim)
barplot(gobp.elim, 10)
barplot(gobp.elim, 20)
?barplot
?enrichplot::barplot
barplot(gobp)
barplot(gobp.elim, num=20)
barplot(gobp.elim, terms=20)
barplot(gobp.elim, nterms=20)
barplot(gobp.elim, showCategory=20)
allRes<-GenTable(
GOdata, classFisher=res.F.C,
elimFisher=res.F.E, weightFisher=res.F.W,
orderBy="weightFisher", ranksOf="classFisher",
topNodes=100, numChar=100
)
gobp.elim<-dropGO(
gobp,
term = setdiff(
row.names(gobp@result),
allRes$GO.ID[1:100]
)
)
barplot(gobp.elim, showCategory=20)
fn<-"~/Desktop/Pax6_Study_DE/results/Epi_DEG_Table.tsv"
idc='gene_id'
fdr='FDR'
lfc='logFC'
# Import data #################################################################
deg<-read.table(fn, sep='\t', quote="", header=T, stringsAsFactors = F)
# Run Gene Ontology Enrichments ###############################################
gl<-deg[abs(deg[,lfc]) > 1 & deg[,fdr]< 0.05, idc ]
gobp<-enrichGO(
gene = gl,
OrgDb = org.Mm.eg.db,
keyType = 'ENSEMBL',
ont = 'BP'
)
ag<-ifelse(deg[,fdr] < 0.05 & abs(deg[,lfc]) > 1, 1, 0)
names(ag)<-deg[,idc]
GOdata<-new(
"topGOdata", ontology="BP", allGenes = ag,
geneSelectionFun = function(allScore){
return(allScore > 0)
}, annot=annFUN.org,
mapping="org.Mm.eg.db",
ID="ensembl"
)
# Run Enrichment Tests #######################################################
res.F.C<-runTest(GOdata, algorithm = "classic", statistic = "fisher")
res.F.E<-runTest(GOdata, algorithm = "elim", statistic = "fisher")
res.F.W<-runTest(GOdata, algorithm = "weight", statistic = "fisher")
allRes<-GenTable(
GOdata, classFisher=res.F.C,
elimFisher=res.F.E, weightFisher=res.F.W,
orderBy="weightFisher", ranksOf="classFisher",
topNodes=100, numChar=100
)
gobp.elim<-dropGO(
gobp,
term = setdiff(
row.names(gobp@result),
allRes$GO.ID[1:100]
)
)
barplot(gobp.elim, terms=20)
barplot(gobp)
barplot(gobp.elim, showCategory=20)
barplot(gobp, showCategory=20)
barplot(gobp.elim, showCategory=20)
allRes<-GenTable(
GOdata, classFisher=res.F.C,
elimFisher=res.F.E, weightFisher=res.F.W,
orderBy="elimFisher", ranksOf="classFisher",
topNodes=100, numChar=100
)
gobp.elim<-dropGO(
gobp,
term = setdiff(
row.names(gobp@result),
allRes$GO.ID[1:100]
)
)
barplot(gobp.elim, showCategory=20)
cnetlot(gobp.elim, showCategory=20)
cnetplot(gobp.elim, showCategory=20)
dev.off()
dev.off()
cnetplot(gobp.elim)
cnetplot(gobp)
?cnetplot
simplify(gopb)
simplify(gobp)
x<-simplify(gobp)
x
barplot(x)
barplot(gobp.elim)
library(GOplot)
?GOplot
data(EC)
EC$genes
head(EC$genes)
head(EC$david)
godata
head(GOdata)
GOdata
gobp
?circle_dat
EC$genelist
EC$david
head(EC$david)
gobp.elim@result
head(gobp.elim@result)
head(gobp.elim@gene2Symbol)
head(gobp.elim@geneSets)
terms<-data.frame(
ID = names(gobp.elim@geneSets),
genes = sapply(gobp.elim@geneSets, paste, sep=",")
)
sapply(gobp.elim@geneSets, paste, sep=",")
lapply(gobp.elim@geneSets, paste, sep=",")
x<-lapply(gobp.elim@geneSets, paste, sep=",")
x
head(x)
x<-lapply(gobp.elim@geneSets, function(x) paste(x,collapse=","))
x
terms<-data.frame(
ID = names(gobp.elim@geneSets),
genes = sapply(gobp.elim@geneSets, paste, collapse=",")
)
head(terms)
View(terms)
rm(x)
head(gobp@result)
terms<-gobp.elim@result[,c(1,2,6,8)]
head(EC$david)
names(terms)
terms$category<-"BP"
terms<-gobp.elim@result[,c(1,2,6,8)]
terms$category<-"BP"
names(terms)[2]<-'term'
names(terms)[3]<-'adj_pval'
names(terms)[4]<-'genes'
head(terms)
terms$genes<-gsub("/", "," termse$genes)
terms$genes<-gsub("/", ",", terms$genes)
head(terms)
head(deg)
genes<-deg[deg$gene_id %in% gl,c(1,5)]
nrow(genes)
circ<-circle_dat(terms, genes)
names(genes)[1]<-"ID"
circ<-circle_dat(terms, genes)
circ
length(unique(circ$ID))
length(unique(circ$genes))
EC$genes
EC$process
unique(circ$term)
unique(circ$term)[c(3, 11, 15, 25, 28, 67)]
chord<-chord_dat(data=circ, process=unique(circ$term)[c(3, 11, 15, 25, 28, 67)])
chord
GOChord(chord)
chord<-chord_dat(data=circ, process=unique(circ$term)[c(3, 11, 25, 28)])
GOChord(chord)
chord_dat
str(chord)
chord<-chord_dat(data=circ, genes = genes, process=unique(circ$term)[c(3, 11, 25, 28)])
GOChord(chord)
GOChord(chord, gene.order='logFC')
GOChord(chord, limit=c(3,0) gene.order='logFC')
GOChord(chord, limit=c(3,0), gene.order='logFC')
GOChord(chord, limit=c(2,0), gene.order='logFC')
chord<-chord_dat(data=circ, genes = genes, process=unique(circ$term)[c(3, 11, 15, 25, 28, 67)])
GOChord(chord, limit=c(2,0), gene.order='logFC')
GOChord(chord, limit=c(3,0), gene.order='logFC')
GOChord(chord, limit=c(3,1), gene.order='logFC')
GOChord(chord, limit=c(2,1), gene.order='logFC')
library(GOplot)
?GOchord
?GOChord
library(tximport)
library(edgeR)
?readDGE
install.packages('RMySQL')
library(RMySQL)
devtools::install_github("r-dbi/odbc")
install.packages('devtools')
library(devtools)
devtools::install_github("r-dbi/odbc")
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(odbc)
library(RMySQL)
con<-dbConnect(
MySQL(),
dbname = NULL,
username = 'root',
password = 'adnaraf7',
host = NULL,
unix.socket = '/opt/local/var/run/mysql8/mysqld.sock',
port = 0,
client.flag = 0,
groups = "rs-dbi", default.file = NULL, ...
)
con<-dbConnect(
MySQL(),
dbname = NULL,
username = 'root',
password = 'adnaraf7',
host = NULL,
unix.socket = '/opt/local/var/run/mysql8/mysqld.sock',
port = 0,
client.flag = 0,
groups = "rs-dbi", default.file = NULL
)
con
dbListTables(con)
dbListDatabases(con)
dbSendQuery(con, 'CREATE DATABASE FOO;')
dbSendQuery(con, 'USE FOO;')
dbSendQuery(con, 'CREATE TABLE bar ( var1 char(10), var2 char(10));')
dbListTables(con)
dbSendQuery(con, 'INSERT INTO bar (var1, var2) values ("A", "B");')
dbSendQuery(con, 'SELECT * FROM bar;')
dbGetQuery(con, 'SELECT * FROM bar;')
dbFetch(con)
dbFetch(<MySQLResult:0,0,5>)
dbSendQuery(con, 'SELECT * FROM bar;')
dbListResults(con)
dbFetch(dbListResults(con))
dbFetch(dbListResults(con)[[1]])
source('~/Pairwise_edgeR/scripts/Pairwise_Tests.R')
source('~/Pairwise_edgeR/scripts/Pairwise_Tests.R')
nrow(deg.et %>% filter(abs(logFC) > 1 & FDR < 0.05))
nrow(deg.qt %>% filter(abs(logFC) > 1 & FDR < 0.05))
nrow(deg.qt %>% filter(logFC > 1 & FDR < 0.05))
nrow(deg.qt %>% filter(logFC < -1 & FDR < 0.05))
